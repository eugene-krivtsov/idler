version: "3.8"

services:
  postgres-idler:
    container_name: postgres-idler
    image: postgres:${POSTGRES_VERSION}
    restart: on-failure
    env_file:
      - .env
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - ./.docker-volumes/postgres:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      idler-net:
        ipv4_address: 172.28.1.1

  liquibase-idler:
    container_name: liquibase-idler
    image: liquibase/liquibase:${LIQUIBASE_VERSION}
    restart: on-failure
    command: --defaultsFile=liquibase.properties update
    depends_on:
      - postgres-idler
    volumes:
      - ./db/:/liquibase/changelog/
      - ./db/:/liquibase/classpath/
      - ./db/liquibase.properties:/liquibase/liquibase.properties
    networks:
      idler-net:
        ipv4_address: 172.28.1.2

  redis-idler:
    container_name: redis-idler
    image: redis:${REDIS_VERSION}
    restart: on-failure
    command: redis-server --include /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis:/usr/local/etc/redis
      - ./docker-volumes/redis:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      idler-net:
        ipv4_address: 172.28.1.3

  mongo-idler:
    container_name: mongo-idler
    image: mongo:${MONGO_VERSION}
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./mongo:/data/configdb
      - ./.docker-volumes/mongo:/data/db
    ports:
      - ${MONGO_PORT}:27017
    networks:
      idler-net:
        ipv4_address: 172.28.1.4

networks:
  idler-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16